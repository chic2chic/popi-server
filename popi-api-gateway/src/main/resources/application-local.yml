server:
  port: 8000

spring:
  application:
    name: api-gateway
  cloud:
    kubernetes:
      config:
        enabled: false
    gateway:
      routes:
        - id: auth-docs
          uri: lb://AUTH
          predicates:
            - Path=/auth/v3/api-docs
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/auth/(?<segment>.*), /$\{segment}
        - id: auth-reissue
          uri: lb://AUTH
          predicates:
            - Path=/auth/reissue
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/auth/(?<segment>.*), /$\{segment}
            - RefreshTokenHeaderFilter
        - id: auth-service
          uri: lb://AUTH
          predicates:
            - Path=/auth/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/auth/(?<segment>.*), /$\{segment}

        - id: member-docs
          uri: lb://MEMBERS
          predicates:
            - Path=/members/v3/api-docs
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/members/(?<segment>.*), /$\{segment}
        - id: member-service
          uri: lb://MEMBERS
          predicates:
            - Path=/members/**
            - Method=GET,POST,DELETE
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/members/(?<segment>.*), /$\{segment}
            - JwtAuthenticationFilter

        - id: reservation-docs
          uri: lb://RESERVATIONS
          predicates:
              - Path=/reservations/v3/api-docs
          filters:
              - RemoveRequestHeader=Cookie
              - RewritePath=/reservations/(?<segment>.*), /$\{segment}
        - id: reservation-service
          uri: lb://RESERVATIONS
          predicates:
            - Path=/reservations/**
            - Method=GET,POST,DELETE
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/reservations/(?<segment>.*), /$\{segment}
            - JwtAuthenticationFilter

        - id: popup-service
          uri: lb://POPUPS
          predicates:
            - Path=/popups/**
            - Method=GET,POST,DELETE
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/popups/(?<segment>.*), /$\{segment}

      globalcors:
        cors-configurations:
          "[/**]":
            allow-credentials: true
            allowed-origins:
              - http://localhost:3000
            allowed-headers:
              - "*"
            allowed-methods:
              - "*"

eureka:
  instance:
    instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}}
    leaseRenewalIntervalInSeconds: 10
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

springdoc:
  enable-kotlin: false
  swagger-ui:
    urls[0]:
      name: 인증 서비스
      url: /auth/v3/api-docs
    urls[1]:
      name: 회원 서비스
      url: /members/v3/api-docs
    urls[2]:
      name: 예약 서비스
      url: /reservations/v3/api-docs
    urls[3]:
      name: 팝업 서비스
      url: /popups/v3/api-docs

jwt:
  access-token-secret: ${JWT_ACCESS_TOKEN_SECRET}
  issuer: ${JWT_ISSUER}

logging:
  level:
    org.hibernate.SQL: debug