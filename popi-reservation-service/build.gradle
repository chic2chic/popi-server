dependencies {
	implementation project(':popi-domain')
	implementation project(':popi-common')

	// Eureka Client
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	// Spring Cloud Kubernetes Discovery Client
	implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-client'

	// Spring Cloud Kubernetes Config Client
	implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-client-config'

	// H2
	runtimeOnly 'com.h2database:h2'

	// MySQL
	runtimeOnly 'com.mysql:mysql-connector-j'

	// JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.0'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Spring Cloud Open Feign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// ZXing
	implementation 'com.google.zxing:core:3.5.3'
	implementation 'com.google.zxing:javase:3.5.3'

	// resilience4j
	implementation("org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j")

	implementation("org.springframework.boot:spring-boot-starter-aop")

    // WireMock
	testImplementation 'org.springframework.cloud:spring-cloud-contract-wiremock:4.2.1'

	// Flyway
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'

	// Kafka
	implementation 'org.springframework.kafka:spring-kafka'
	testImplementation 'org.springframework.kafka:spring-kafka-test'

	// Protobuf serialization
	implementation "com.google.protobuf:protobuf-java:${protobufVersion}"

	// gRPC
	implementation "net.devh:grpc-client-spring-boot-starter:${grpcSpringVersion}"
	implementation "io.grpc:grpc-netty-shaded:${grpcVersion}"
	implementation "io.grpc:grpc-stub:${grpcVersion}"
	implementation "io.grpc:grpc-inprocess:${grpcVersion}"

	// prometheus
	implementation 'io.micrometer:micrometer-registry-prometheus'
}